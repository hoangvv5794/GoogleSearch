package com.viettel.vtcc.crawler.search.google.msc;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.viettel.vtcc.crawler.search.google.model.MuasamcongEntity;
import com.viettel.vtcc.crawler.search.google.utils.HttpAction;
import lombok.extern.slf4j.Slf4j;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

import javax.management.timer.Timer;
import java.io.FileOutputStream;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.stream.IntStream;

@Slf4j
public class EntityCollector {

    private static final LinkedBlockingQueue<MuasamcongEntity> queue_url = new LinkedBlockingQueue<>();
    private static final ObjectMapper mapper = new ObjectMapper();
    private static final String list_processed = "3640,2793,2792,2791,2790,3638,3639,2789,2788,2787,2786,2785,2784,2783,3636,3637,3650,3651,3649,2799,2798,2797,2796,2795,2794,3641,3642,3643,3644,3645,3646,3647,3648,3660,3661,3662,3652,3653,3654,3655,3656,3657,3658,3659,3670,3671,3672,3673,3663,3664,3665,3666,3667,3668,3669,3680,3681,3682,3683,3684,2353,3200,2352,2351,3674,3675,3676,3677,3678,3679,3690,3691,3692,3693,3694,3695,3211,2364,2363,3210,2362,2361,2360,3208,3207,2359,3206,2358,3205,2357,3204,2356,3203,2355,3202,2354,3201,3685,3686,3687,3688,3689,3209,3222,3221,3220,3219,3218,3217,3216,3215,2368,3214,2367,3213,2366,3212,2365,3696,3697,3698,3699,3233,3225,3224,3223,2397,3244,2396,3243,2395,3242,2394,3241,2393,3240,2392,2391,2390,3239,3238,3237,3236,3235,3234,4100,4101,4102,3255,3254,3253,3252,3251,3250,3249,3248,3247,2399,3246,2398,3245,3266,3265,3264,3263,3262,3261,3260,3259,3258,3257,3256,3277,3276,3275,3274,3273,3272,3271,3270,3269,3268,3267,3279,3278,4142,4143,4144,4145,4146,4150,4151,4152,4153,4154,4155,4156,4157,4147,4148,4149,4161,4160,4158,4159,2801,2800,2809,2808,2807,2806,2805,2804,2803,2802,2812,2811,2810,2819,2818,2817,2815,2814,2813,2823,2822,2821,2820,2829,2828,2827,2826,2825,2824,2834,2833,2832,2831,2830,2839,2838,2837,2836,2835,2845,2844,2843,2842,2841,2840,2849,2848,2847,2846,2856,3704,2855,3705,2854,3706,2853,3707,3708,2852,2851,3709,2850,3700,3701,3702,3703,3710,3711,3712,3713,3726,3727,3728,3729,3723,3724,3725,2405,3737,2404,3738,2403,3739,2402,2401,2400,3730,3731,3732,2409,3733,2408,3734,2407,3735,2406,3736,3750,2416,3748,2415,2899,3749,2414,2898,2413,2897,2412,2896,2411,2410,3740,3741,3742,3743,3744,2419,3745,2418,3746,2417,3747,3760,3761,2430,2427,3759,2426,2425,2424,2423,2422,2421,2420,3751,3752,3753,3754,3755,3756,2429,3757,2428,3758,3770,3771,3772,2441,2440,2438,2437,2436,2435,2434,2433,2432,2431,3762,3763,3764,3765,3766,3767,3768,2439,3769,3780,3781,3782,3783,2452,2451,2450,2449,2448,2447,2446,2445,2444,2443,2442,3773,3774,3775,3776,3777,3778,3779,3793,3794,2463,2462,2461,2460,2459,2458,2457,2456,2455,2454,2453,3784,3785,3786,3787,3788,2467,2466,2465,2464,3795,3796,3797,3798,3799,3332,3331,3330,3329,3327,3326,3325,3324,3343,3342,3340,3339,3338,3337,3336,3335,3334,3333,3354,3353,3352,3351,3350,3349,3348,3346,3345,3344,3365,3364,3363,3362,3360,3359,3358,3357,3356,3355,4220,4221,4222,4223,3376,3375,3374,3373,3372,3371,3370,3369,3368,3367,3366,4213,4214,4215,4216,4217,4218,4219,4230,4231,4232,4233,4234,3387,3386,3385,3384,3383,3382,3381,3380,3379,3378,3377,4224,4225,4226,4227,4228,4229,3390,4240,4241,4242,4243,4244,4245,3398,3397,3396,3395,3394,3393,3392,3391,3389,3388,4235,4236,4237,4238,4239,4250,4251,4252,4253,4254,4255,4256,3399,4246,4247,4248,4249,4260,4261,4262,4263,4264,4265,4266,4267,4257,4258,4259,4271,4272,4273,4274,4275,4276,4277,4278,4270,4268,4269,4282,4283,4284,4285,4286,4287,4288,4289,4280,4281,4279,4293,4294,4295,4296,4297,4298,4299,4290,4291,4292,2909,2900,2908,2907,2906,2905,2904,2903,2902,2901,2911,2910,2914,2913,2912,3803,3804,3805,3806,3807,3808,3809,3800,3801,3802,3814,3815,3816,3817,3818,3819,3810,3811,3812,3813,3825,3826,3828,3829,3820,3821,3822,3823,3824,3836,3837,3838,3839,3830,3831,3832,3833,3834,3835,3847,3848,3849,3840,3841,3842,3843,3844,3845,3846,3860,3858,3859,3850,3851,3852,3853,3854,3855,3856,3857,3870,3871,3869,3861,3862,3863,3864,3865,3866,3867,3868,3880,3881,3882,3872,3873,3874,3875,3876,3877,3878,3879,3890,3891,3892,3893,3406,3405,3404,3403,3402,3401,3400,3883,3884,3885,3886,3887,3409,3888,3408,3889,3407,3420,3417,3416,3415,3414,3413,3412,3411,3410,3894,3895,3896,3897,3898,3899,3419,3418,3431,3430,3428,3427,3426,3425,3424,3423,3422,3421,3429,3442,3441,3440,3439,3438,3437,3436,3435,3434,3433,3432,4300,3453,3452,3451,3450,3449,3448,3447,3446,3445,3444,3443,4310,4311,3464,3463,3462,3461,3460,4309,3459,3458,3457,3456,3455,3454,4301,4302,4303,4304,4305,4306,4307,4308,4320,4321,4322,3475,3474,3473,3472,3471,3470,3469,3468,3467,3466,3465,4312,4313,4314,4315,4316,4317,4318,4319,4330,4331,4332,4333,3486,3002,3485,3001,3484,3483,3482,3481,3480,3479,3478,3477,3476,4323,4324,4325,4326,4327,4328,4329,4340,4341,4342,4343,4344,2166,3497,3013,2165,3496,3012,2164,3495,3011,2163,3494,3010,2162,3493,2161,3492,2160,3491,3490,3009,3008,3007,2159,3006,2158,3489,3005,2157,3488,3004,2156,3487,3003,4334,4335,4336,4337,4338,4339,4350,4351,4352,4353,4354,4355,2177,3024,2176,3023,2175,3022,2174,3021,2173,3020,2172,2171,2170,3019,3018,3017,2169,3016,2168,3499,3015,2167,3498,3014,4345,4346,4347,4348,4349,2180,4360,4361,4362,4363,4364,4365,4366,2188,2187,2186,2185,2184,2183,2182,2181,3029,3028,3027,2179,3026,2178,3025,4356,4357,4358,4359,2191,4370,2190,4371,4372,4373,4374,4375,4376,4377,2199,2198,2197,2196,2195,2194,2193,2192,2189,4367,4368,4369,4381,4382,4383,4384,4385,4386,4387,4388,3057,3056,3055,3054,3053,3052,3051,4380,3050,3049,3048,3047,4378,4379,4392,3060,4393,4394,4395,4396,4397,4398,3068,3067,3066,3065,3064,3063,4390,3062,4391,3061,3059,3058,4389,3071,3070,3079,3078,3077,3076,3075,3074,3073,3072,3069,3082,3081,3080,3089,3088,3087,3086,3085,3084,3083,3093,3092,3091,3090,3099,3098,3097,3096,3095,3094,3902,3909,3900,3901,3913,3914,3915,3916,3917,3918,3919,3910,3911,3912,3924,3925,3926,3927,3928,3929,3920,3921,3922,3923,3935,3936,3937,3938,3939,3930,3931,3932,3933,3934,3946,3947,3948,3949,3940,3941,3942,3943,3944,3945,3957,3958,3959,3950,3951,3952,3953,3954,3955,3956,3970,3968,3969,3960,3961,3962,3963,3964,3965,3966,3967,3980,3981,3979,3971,3990,3991,3992,3505,3504,3503,3502,3501,3500,3982,3983,3984,3985,3986,3509,3987,3508,3988,3507,3989,3506,3516,3515,3514,3513,3512,3511,3510,3993,3994,3995,3996,3997,3519,3998,3999,3518,3517,3530,3527,3526,3525,3524,3523,3522,3521,3520,3529,3528,2210,3541,3540,2207,3538,3537,2206,2205,3536,2204,3535,2203,3534,2202,3533,2201,3532,2200,3531,2209,2208,3539,2221,3552,2220,3551,3550,2218,3549,2217,3548,2216,3547,2215,3546,2214,3545,2213,3544,2212,3543,2211,3542,2219,2232,2231,2230,2229,2228,3559,2227,3558,2226,3557,2225,3556,2224,3555,2223,3554,2222,3553,2233,3101,3100,3112,3111,3110,3109,3108,3107,3106,3105,3104,3103,3102,4450,4451,4452,4453,4454,3123,2276,3122,2275,3121,2274,3120,2273,3119,3118,3117,3116,3115,3599,3114,3598,3113,3597,4446,4447,4448,4449,4460,4461,4462,4463,4464,4465,3134,2287,3133,2286,3132,2285,3131,2284,3130,2283,2282,2280,3129,3128,3127,3126,2279,3125,2278,3124,2277,4455,4456,4457,4458,4459,2290,3145,3144,3143,3142,3141,3140,2292,2291,3139,3138,3137,3136,2289,3135,2288,4466,4467,4468,4469,4000,4001,4002,4003,3156,3155,3154,3153,3152,3151,3150,3149,3148,3147,3146,4010,4011,4012,4013,4014,3167,3166,3165,3164,3163,3162,3161,3160,3159,3158,3157,4004,4005,4006,4007,4008,4009,3170,4020,4021,4022,4023,4024,4025,3178,3177,3176,3175,3174,3173,3172,3171,3169,3168,4015,4016,4017,4018,4019,3181,4030,3180,4031,4032,4033,4034,4035,4036,3189,3188,3187,3186,3185,3184,3183,3182,3179,4026,4027,4028,4029,4040,3192,4041,3191,4042,3190,4043,4044,4045,4046,4047,3199,3198,3197,3196,3195,3194,3193,4037,4038,4039,4051,4052,4053,4054,4055,4056,4057,4058,4050,4048,4049,4062,4063,4064,4065,4066,4067,4068,4069,4060,4061,4059,4073,4074,4075,4076,4077,4078,4079,4070,4071,4072,4084,4085,4086,4087,4088,4089,4080,4081,4082,4083,4095,4096,4097,4098,4099,4090,4091,4092,4093,4094,2702,2701,2709,2708,2707,2706,2705,2703,2713,2712,2711,2710,2719,2718,2717,2716,2715,2714,2724,2723,2722,2721,2720,2729,2728,2727,2726,2725,2735,2734,2733,2732,2731,2730,2739,2738,2737,2736,2746,2745,2744,2743,2742,2741,2740,2749,2748,2747,2760,3604,2757,3603,2756,3602,2755,3601,2754,3600,2753,2752,2751,2750,3609,3608,3607,3606,2759,3605,2758,2771,2770,3615,2768,3614,2767,3613,2766,3612,2765,3611,2764,3610,2763,2762,2761,3616,2769,2782,2781,2780,2779,2776,2775,2774,2773,2772";

    public static void main(String[] args) {
        System.setProperty("java.util.concurrent.ForkJoinPool.common.parallelism", "8");
        try {
            new Thread(() -> {
                try {
                    FileOutputStream fop = new FileOutputStream("list_bid.txt", true);
                    while (true) {
                        if (queue_url.isEmpty()) {
                            Thread.sleep(2 * Timer.ONE_SECOND);
                        } else {
                            MuasamcongEntity url = queue_url.poll();
                            if (url != null) {
                                fop.write((mapper.writeValueAsString(url) + "\n").getBytes(StandardCharsets.UTF_8));
                            }
                        }
                    }
                } catch (Exception e) {
                    log.error(e.getMessage(), e);
                }

            }).start();
        } catch (Exception e) {
            log.error(e.getMessage(), e);
        }
        try {
            List<String> listProcessed = Arrays.asList(list_processed.split(","));
            IntStream.range(2001, 4493).parallel().forEach(num_page_string -> {
                String num_page = String.valueOf(num_page_string);
                if (!listProcessed.contains(num_page)) {
                    log.info("process page {}", num_page);
                    List<MuasamcongEntity> list_bid = getFullInfoEntity(num_page);
                    log.info("page {} found {} bid", num_page, list_bid.size());
                    queue_url.addAll(list_bid);
                }
            });
        } catch (Exception e) {
            log.error(e.getMessage(), e);
        }
    }

    private static List<MuasamcongEntity> getFullInfoEntity(String num_page) {
        List<MuasamcongEntity> listUrlDetails = new LinkedList<>();
        try {
            String url_page = "https://muasamcong.mpi.gov.vn/web/guest/list-bid-solicitors?pageNumber=" + num_page;
            String html_page = HttpAction.sendRequest(url_page, null, null);
            Document document_page = Jsoup.parse(html_page);
            Elements elements = document_page.select("div.col-2.text-center.my-auto.xem-chi-tiet");
            elements.forEach(element -> {
                try {
                    String url = element.select("a[href]").attr("href");
                    MuasamcongEntity entity = getDetailInfoEntity(url);
                    if (entity != null && entity.getCodeEntity() != null) {
                        listUrlDetails.add(entity);
                    }
                } catch (Exception e) {
                    log.error(e.getMessage(), e);
                }
            });
        } catch (Exception e) {
            log.error(e.getMessage(), e);
        }
        return listUrlDetails;
    }

    private static MuasamcongEntity getDetailInfoEntity(String url) {
        MuasamcongEntity muasamcongEntity = new MuasamcongEntity();
        try {
//            log.info("get detail url {}", url);
            String html_page = HttpAction.sendRequest(url, null, null);
            if (html_page != null) {
                Document document_page = Jsoup.parse(html_page);
                Elements elements = document_page.select("table.table").select("div.row.mr-0.ml-0");
                elements.forEach(element -> {
                    Elements firstElement = element.select("div.col-md-3");
                    String key_string = firstElement.text().trim();
                    Elements secondElement = element.select("div.col-md-9");
                    String value_string = secondElement.text().trim();
                    switch (key_string) {
                        case "Ngày phê duyệt yêu cầu đăng ký":
                            muasamcongEntity.setDateAcceptSub(value_string);
                        case "Trạng thái vai trò":
                            muasamcongEntity.setStatus(value_string);
                        case "Mã định danh":
                            muasamcongEntity.setCodeEntity(value_string);
                        case "Tên đơn vị (đầy đủ)":
                            muasamcongEntity.setFullNameEntity(value_string);
                        case "Tên đơn vị (tiếng Anh)":
                            muasamcongEntity.setNameEntityEnglish(value_string);
                        case "Mã số thuế":
                            muasamcongEntity.setTaxCode(value_string);
                        case "Loại hình pháp lý":
                            muasamcongEntity.setTypeEntity(value_string);
                        case "Tên cơ quan chủ quản":
                            muasamcongEntity.setOwnerEntity(value_string);
                        case "Mã quan hệ ngân sách":
                            muasamcongEntity.setCodeRelationship(value_string);
                        case "Tỉnh/Thành phố":
                            Elements cityElements = firstElement.next();
                            muasamcongEntity.setCity(cityElements.text());
                        case "Địa chỉ":
                            muasamcongEntity.setAddress(value_string);
                        case "Số điện thoại":
                            muasamcongEntity.setPhone(value_string);
                        case "Web":
                            muasamcongEntity.setWebsite(value_string);
                        case "Họ và tên":
                            muasamcongEntity.setPeopleOwnEntity(value_string);
                        case "Chức vụ":
                            muasamcongEntity.setTypePeople(value_string);

                    }
                });
            }
        } catch (Exception e) {
            log.error(e.getMessage(), e);
        }
        return muasamcongEntity;
    }

}
